name: Check URLs

on:
  push:
    branches:
      - "main"
    paths:
      - "docs/**"
  pull_request:
    branches:
      - "main"
    paths:
      - "docs/**"
  workflow_dispatch:

jobs:
  check-urls:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      actions: write  # Ensure the workflow has permission to upload artifacts

    steps:
      - uses: actions/checkout@v4

      - name: Print Environment Variables
        run: env

      - name: URLs Checker
        id: url-checker
        uses: urlstechie/urlchecker-action@0.0.34
        with:
          file_types: .md,.html,.yml,.conf,.txt,.py,.json,.sh,.ini,.spg
          print_all: false
          verbose: true
          timeout: 5
          retry_count: 3
          exclude_patterns: localhost,api,apis,rss,etc,xx,googleapis,hostname,snowflake,graph.microsoft.com,login.microsoftonline.com,my-host.com,azure.com,github.com
          exclude_files: Swirl.postman_collection.json,docs/googlec95caf0bd4a8c5df.html,docs/Gemfile,docs/Gemfile.lock,docs/_config.yml,tests/,SearchProviders/,DevUtils/
          save: urlcheck_results.csv

      - name: Generate Summary
        if: always()
        run: |
          echo "*** PWD $(pwd)"
          echo "*** files: $(ls -lrt)"
          passed_count=0
          excluded_count=0
          failed_count=0
          failed_urls=""
        
          if [ ! -s urlcheck_results.csv ]; then
            echo "urlcheck_results.csv is missing or empty"
            exit 1
          fi
        
          while IFS=, read -r url result filename; do
            case $result in
              passed)
                ((passed_count++))
                ;;
              excluded)
                ((excluded_count++))
                ;;
              failed)
                ((failed_count++))
                failed_urls+="$url, $filename\n"
                ;;
            esac
          done < <(tail -n +2 urlcheck_results.csv)
          echo "*** Passed: $passed_count"
          echo "*** Excluded: $excluded_count"
          echo "*** Failed: $failed_count"
          echo "*** Generating summary.md"
          echo "## URL Check Summary" > summary.md
          echo "" >> summary.md
          echo "Passed: $passed_count" >> summary.md
          echo "Excluded: $excluded_count" >> summary.md
          echo "Failed: $failed_count" >> summary.md
        
          if [ $failed_count -gt 0 ]; then
            echo -e "\n### Failed URLs:" >> summary.md
            echo -e "$failed_urls" >> summary.md
          fi

      - name: Upload Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: urlcheck-results
          path: |
            urlcheck-results.csv
            summary.md
