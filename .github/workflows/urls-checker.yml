name: Check URLs

on:
  push:
    branches:
      - "main"
    paths:
      - "docs/**"
  pull_request:
    branches:
      - "main"
    paths:
      - "docs/**"
  workflow_dispatch:

jobs:
  check-urls:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      actions: write  # Ensure the workflow has permission to upload artifacts

    steps:
      - uses: actions/checkout@v4

      - name: Print Environment Variables
        run: env

      - name: URLs Checker
        id: url-checker
        uses: urlstechie/urlchecker-action@0.0.34
        with:
          file_types: .md,.html,.yml,.conf,.txt,.py,.json,.sh,.ini,.spg
          print_all: false
          verbose: true
          timeout: 5
          retry_count: 3
          exclude_patterns: localhost,api,apis,rss,etc,xx,googleapis,hostname,snowflake,graph.microsoft.com,login.microsoftonline.com,my-host.com,azure.com,github.com
          exclude_files: Swirl.postman_collection.json,docs/googlec95caf0bd4a8c5df.html,docs/Gemfile,docs/Gemfile.lock,docs/_config.yml,tests/,SearchProviders/,DevUtils/

      - name: Save URL Check Output
        if: always()
        run: |
          echo "${{ steps.url-checker.outputs.result }}" > urlcheck_output.txt

      - name: URLs Checker Report
        if: always()
        id: create-summary
        run: |
          echo "## Broken Links Report" > summary.md
          echo "" >> summary.md
          grep -i "broken" urlcheck_output.txt >> summary.md || echo "No broken links found." >> summary.md

      - name: Upload Summary and Raw File
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: summary-and-raw
          path: |
            summary.md
            urlcheck_output.txt

      - name: Post Comment with Summary
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('summary.md', 'utf8');
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `### URL Check Summary\n\n${summary}`
            });
